// Typography
// ---------------------------------------

// Setting root sizes and base styles.
html {
  @include rootsize;

  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
}

// Site-wide base styles.
body {
  @include fontsize(zeta, all);

  font-family: unquote(map-get($bodytype, font-family));
  font-style: normal;
  font-weight: map-get($bodytype, regular);
  line-height: 2rem;
}

// Links.
a {
  color: $linkColour;
  text-decoration: none;
  transition: color .1s, background-color .1s;

  &:hover, &:active, &:focus {
    color: $hoverColour;
    text-decoration: none;
  }
}

// Styles for typeset text.
.typeset {

  // Nice underlines for text links.
  p a, li a {
    background-image: linear-gradient(to bottom,rgba(0, 0, 0, 0) 50%,$linkColour 50%);
    background-position: 0 93%;
    background-repeat: repeat-x;
    background-size: 100% 0.15rem;
    text-shadow: 0.1rem 0 $backgroundColour,
                 0.15rem 0 $backgroundColour,
                -0.1rem 0 $backgroundColour,
                -0.15rem 0 $backgroundColour;

    &:hover, &:active, &:focus {
      background-image: linear-gradient(to bottom,rgba(0, 0, 0, 0) 50%,$hoverColour 50%);
    }
  }

  // Paragraphs. OpenType ligatures and oldstyle figures enabled if available.
  p {
    @include baseline($fontsize: zeta, $font: $bodytype, $lineheight: 2, $below: 2, $breakpoint: all);

    font-feature-settings: 'kern', 'onum', 'liga';
  }

  // Headings. OpenType ligatures, discretionary ligatures and lining figures enabled if available.
  h1, h2, h3, h4, h5, h6 {
    color: $headingColour;
    font-family: unquote(map-get($headingtype, font-family));
    font-feature-settings: 'dlig', 'liga', 'lnum', 'kern';
    font-style: normal;
    font-weight: map-get($headingtype, bold);
  }

  // Heading level 1.
  h1, .alpha {
    @include sassline($fontsize: alpha, $font: $headingtype, $lineheight: 3, $below: 1, $breakpoint: all);
  }

  // Heading level 2.
  h2, .beta {
    @include sassline(beta, $headingtype, 3, 1, all);
  }

  // Heading level 3.
  h3, .gamma {
    @include sassline(gamma, $headingtype, 3, 1, all);
  }

  // Heading level 4.
  h4, .delta {
    @include sassline(delta, $headingtype, 2, 0, all);
  }

  // Heading level 5.
  h5, .epsilon {
    @include sassline(epsilon, $headingtype, 2, 0, all);
  }

  // Heading level 6.
  h6, .zeta {
    @include sassline(zeta, $headingtype, 2, 0, all);
  }

  // Lists.
  ul, ol {
    @include baseline(zeta, $bodytype, 2, 2, all);

    li {
      font-feature-settings: 'kern', 'onum', 'liga';
      margin-left: 2rem;

      @include breakpoint(break-1) {
        margin-left: 0;
      }

      ol, ul {
        padding-top: 1rem;
        margin-bottom: 1rem;
        margin-left: 2rem;
      }
    }
  }

  // Ordered lists.
  ol {
    list-style-type: none;

    li {
      counter-increment: top-level;

      &:before {
        content: counter(top-level) '.';
        font-feature-settings: 'lnum', 'tnum';
        margin-left: -3rem;
        position: absolute;
        text-align: right;
        width: 2em;
      }

      ul {

        li {

          &:before {
            content: '';
          }

          ol {

            li {
              counter-increment: alt-level;

              &:before {
                content: counter(alt-level) '.';
              }
            }
          }
        }
      }

      ol {

        li {
          counter-increment: sub-level;

          &:before {
            content: counter(top-level) '.' counter(sub-level);
          }

          ul {

            li {

              &:before {
                content: '';
              }
            }
          }

          ol {

            li {
              counter-increment: sub-sub-level;

              &:before {
                content: counter(top-level) '.' counter(sub-level) '.' counter(sub-sub-level);
              }
            }
          }
        }
      }
    }
  }

  // Definition lists.
  dl {
    @include baseline(zeta, $bodytype, 2, 2, all);

    dt, dd {
      font-feature-settings: 'kern', 'onum', 'liga';
      margin-left: 2rem;

      @include breakpoint(break-1) {
        margin-left: 0;
      }
    }

    dt {
      font-weight: map-get($bodytype, bold);
    }

    dd + dt {
      padding-top: 1rem;
    }
  }

  // Tables.
  table {
    @include sassline(eta, $headingtype, 2, 0, all);

    font-family: unquote(map-get($headingtype, font-family));
    font-feature-settings: 'liga', 'lnum', 'tnum', 'kern';
    font-style: normal;
    font-weight: map-get($headingtype, regular);
    width: 100%;

    thead {

      th {
        @include sassline(zeta, $headingtype, 2, 0, all);
        padding-bottom: 1px;
      }
    }
  }

  // Bold.
  b, strong, .bold {
    font-weight: map-get($bodytype, bold);
  }

  // Italic.
  em, i, .italic {
    font-style: map-get($bodytype, italic);
  }

  // Caption and inline small text.
  small, .caption {
    @include fontsize(theta, all);

    font-family: unquote(map-get($headingtype, font-family));
    font-style: normal;
    font-weight: map-get($headingtype, regular);
  }

  small {
    line-height: 1rem;
  }

  .caption {
    @include baseline(theta, $headingtype, 2, 2, all);

    color: $captionColour;
  }

  // Nice spacing for captions.
  h1 + .caption, .alpha + .caption, h2 + .caption, .beta + .caption, h3 + .caption, .gamma + .caption {
    margin-top: -1rem;
  }

  .delta + .caption, .epsilon + .caption, .zeta + .caption {
    margin-top: 0rem;
  }

  // Quotes.
  blockquote {

    p {
      border-left: 0.15rem solid $linkColour;
      font-style: map-get($bodytype, italic);
      padding-left: 1rem;

      // Add spacing below blockquote paragraphs to align to baseline grid.
      $get-scale: map-get($modular-scale, scale-0);
      $get-size: map-get($get-scale, zeta);
      $rootsize: nth($sizes, 1);
      $baseline-shift: #{($get-size / 2 * ((2 * $rootsize / $get-size) - map-get($bodytype, cap-height))) / $rootsize + 0.00001};
      $baseline-push: #{3 - (($get-size * ((2 * $rootsize / $get-size) - map-get($bodytype, cap-height))) / $rootsize + 0.00001)};

      margin-bottom: #{$baseline-push}rem;
      padding-bottom: #{$baseline-shift}rem;

      @for $i from 2 through $breakpoints-limit {
        $get-scale: map-get($modular-scale, scale-#{$i - 1});
        $get-size: map-get($get-scale, zeta);
        $rootsize: nth($sizes, $i);
        $baseline-shift: #{($get-size / 2 * ((2 * $rootsize / $get-size) - map-get($bodytype, cap-height))) / $rootsize + 0.00001};
        $baseline-push: #{3 - (($get-size * ((2 * $rootsize / $get-size) - map-get($bodytype, cap-height))) / $rootsize + 0.00001)};

        @media screen and (min-width: nth($points, $i) / 16 * 1em ) {
          margin-bottom: #{$baseline-push}rem;
          padding-bottom: #{$baseline-shift}rem;
        }
      }
    }

    @include breakpoint(break-1) {
      margin-left: -1rem;
    }
  }

  // Horizontal rule.
  hr {
    background-image: linear-gradient(to bottom,rgba(0, 0, 0, 0) 50%,$captionColour 50%);
    background-position: 0 50%;
    background-repeat: repeat-x;
    background-size: 100% 0.15rem;
    border: 0;
    margin: 0;
    padding-bottom: 3rem;
    padding-top: 3rem;
  }

  // Code block.
  code, pre {
    background-color: $codeBackgroundColour;
    font-family: unquote(map-get($monospacetype, font-family));
  }

  pre {
    display: block;
    margin-bottom: 2rem;
    padding: 1rem;
    white-space: pre;
    white-space: pre-wrap;
    word-break: break-all;
    word-wrap: break-word;
  }

  code {
    @include fontsize(theta, all);

    line-height: 1rem;
  }

/**
 * Reset some basic elements
 */
 body, h1, h2, h3, h4, h5, h6,
 p, blockquote, pre, hr,
 dl, dd, ol, ul, figure, a {
   margin: 0;
   padding: 0;
 }

 
 
 /**
  * Basic styling
  */
 body {
   font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;
   color: $text-color;
   background-image: $background-image;
   background-color: $background-color;
   -webkit-text-size-adjust: 100%;
   -webkit-font-feature-settings: "kern" 1;
      -moz-font-feature-settings: "kern" 1;
        -o-font-feature-settings: "kern" 1;
           font-feature-settings: "kern" 1;
   font-kerning: normal;
   display: flex;
   min-height: 100vh;
   flex-direction: column;
 }
 
 
 
 /**
  * Set `margin-bottom` to maintain vertical rhythm
  */
 h1, h2, h3, h4, h5, h6,
 p, blockquote, pre,
 ul, ol, dl, figure,
 %vertical-rhythm {
   margin-bottom: $spacing-unit / 2;
 }
 
 
 
 /**
  * `main` element
  */
 main {
   display: block; /* Default value of `display` of `main` element is 'inline' in IE 11. */
 }
 
 
 
 /**
  * Images
  */
 img {
   max-width: 100%;
   vertical-align: middle;
   text-align: center;
   margin: auto;
   display: flex;
 }
 
 /**
  * Figures
  */
 figure > img {
   display: block;
 }
 
 figcaption {
   font-size: $small-font-size;
 }
 
 
 
 /**
  * Lists
  */
 ul, ol {
   margin-left: $spacing-unit;
 }
 
 li {
   > ul,
   > ol {
     margin-bottom: 0;
   }
 }
 
 
 
 /**
  * Headings
  */
 h1, h2, h3, h4, h5, h6 {
   font-weight: $base-font-weight;
 }
 
 
 
 /**
  * Links
  */
 a {
   color: $brand-color;
   text-decoration: none;
 
   &:visited {
      //color: darken($brand-color, 15%);
   }
 
   &:hover {
     color: #8db8fc;
     text-decoration: underline;
   }
 
   .social-media-list &:hover {
     text-decoration: none;
 
     .username {
       text-decoration: underline;
     }
   }
 }
 
 
 
 /**
  * Blockquotes
  */
 blockquote {
   color: #060616; // $grey-color;
   border-left: 4px solid #13137a;   // $grey-color-light;
   padding-left: $spacing-unit / 2;
   @include relative-font-size(1.125);
   letter-spacing: -1px;
   font-style: italic;
 
   > :last-child {
     margin-bottom: 0;
   }
 }
 
 
 
 /**
  * Code formatting
  */
 pre,
 code {
   @include relative-font-size(0.9375);
   border: 1px solid rgba(255, 255, 255, 0); // $grey-color-light;
   border-radius: 3px;
   background-color: $code-background; //rgba(252, 252, 252, 0);
   color: #f8f8f8;
 }
 
 code {
   padding: 1px 5px;
 }
 
 pre {
   padding: 8px 12px;
   overflow-x: auto;
 
   > code {
     border: 0;
     padding-right: 0;
     padding-left: 0;
   }
 }
 
 
 
 /**
  * Wrapper
  */
 .wrapper {
   max-width: -webkit-calc(#{$content-width} - (#{$spacing-unit} * 2));
   max-width:         calc(#{$content-width} - (#{$spacing-unit} * 2));
   margin-right: auto;
   margin-left: auto;
   padding-right: $spacing-unit;
   padding-left: $spacing-unit;
   @extend %clearfix;
 
   @include media-query($on-laptop) {
     max-width: -webkit-calc(#{$content-width} - (#{$spacing-unit}));
     max-width:         calc(#{$content-width} - (#{$spacing-unit}));
     padding-right: $spacing-unit / 2;
     padding-left: $spacing-unit / 2;
   }
 }
 
 
 
 /**
  * Clearfix
  */
 %clearfix:after {
   content: "";
   display: table;
   clear: both;
 }
 
 
 
 /**
  * Icons
  */
 
 .svg-icon {
     width: 16px;
     height: 16px;
     display: inline-block;
     fill: #{$grey-color};
     padding-right: 5px;
     vertical-align: text-top;
 }
 
 .social-media-list {
   li + li {
     padding-top: 5px;
   }
 }
 
 
 
 /**
  * Tables
  */
 table {
   margin-bottom: $spacing-unit;
   width: 100%;
   text-align: $table-text-align;
   color: lighten($text-color, 18%);
   border-collapse: collapse;
   border: 1px solid $grey-color-light;
   tr {
     &:nth-child(even) {
       background-color: lighten($grey-color-light, 6%);
     }
   }
   th, td {
     padding: ($spacing-unit / 3) ($spacing-unit / 2);
   }
   th {
     background-color: lighten($grey-color-light, 3%);
     border: 1px solid darken($grey-color-light, 4%);
     border-bottom-color: darken($grey-color-light, 12%);
   }
   td {
     border: 1px solid $grey-color-light;
   }
 }

  // Letter space those capitals people, Jan Tschichold would be proud.
  .upper {
    font-kerning: normal;
    letter-spacing: 0.1rem;
    text-transform: uppercase;
  }

  // Real small caps.
  .small-caps {
    font-feature-settings: 'smcp', 'kern';
    font-kerning: normal;
    letter-spacing: 0.1rem;
  }

  // Consistent height numbers with OpenType.
  .lining-numerals {
    font-feature-settings: 'lnum', 'kern';
  }

  // Ascending and descending numbers with OpenType.
  .oldstyle-numerals {
    font-feature-settings: 'onum', 'kern';
  }
}

  // H1_2
  .h1_2 {
    @include sassline($fontsize: alpha, $font: $headingtype, $lineheight: 3, $below: 1, $breakpoint: all);
    color: #ffffff;
  }